using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace HashGeneratorApp.Models.Tests
{
    /**
     * Purpose: Contains Unit Tests for the class HashGenerator by testing the single
     *          static method GenerateHash, for the various test algorithms (e.g. MD5, SHA1,
     *           SHA256, etc)
     *           
     *           Author: Terence Lee
     *         
     */
    [TestClass()]
    public class HashGeneratorTests
    {
        /// 
        /// The two strings that are used for the test inputs
        /// 
        const string TEST_STRING_1 = "12345";
        const string TEST_STRING_2 = "Hello World";



        /// <summary>
        /// Test for MD5 hashing for the GenerateHash static method
        /// </summary>
        /// 
        /// <param name="hashInput">Input passed into the GenerateHash static method</param>
        /// <param name="expectedHashOutput">Expected hash generated by the
        ///   GenerateHash static method</param>
        [DataTestMethod]
        [DataRow(TEST_STRING_1,
                "827ccb0eea8a706c4c34a16891f84e7b")]
        [DataRow(TEST_STRING_2,
                "b10a8db164e0754105b7a99be72e3fe5")]
        public void GenerateHash_MD5HashTest_ValidCorrect(string hashInput, 
                                                          string expectedHashOutput)
        {
            string actualHashOutput = HashGenerator.GenerateHash(hashInput, 
                                                            HashGenerator.HashAlgorithmType.MD5);

            Assert.AreEqual(actualHashOutput, expectedHashOutput);
        }



        /// <summary>
        /// Test for SHA1 hashing for the GenerateHash static method
        /// </summary>
        /// 
        /// <param name="hashInput">Input passed into the GenerateHash static method</param>
        /// <param name="expectedHashOutput">Expected hash generated by the
        ///   GenerateHash static method</param>
        [DataTestMethod]
        [DataRow(TEST_STRING_1,
                "8cb2237d0679ca88db6464eac60da96345513964")]
        [DataRow(TEST_STRING_2,
                "0a4d55a8d778e5022fab701977c5d840bbc486d0")]
        public void GenerateHash_SHA1HashTest_ValidCorrect(string hashInput, 
                                                            string expectedHashOutput)
        {
            string actualHashOutput = HashGenerator.GenerateHash(hashInput, 
                                                             HashGenerator.HashAlgorithmType.SHA1);

            Assert.AreEqual(actualHashOutput, expectedHashOutput);
        }



        /// <summary>
        /// Test for SHA256 hashing for the GenerateHash static method
        /// </summary>
        /// 
        /// <param name="hashInput">Input passed into the GenerateHash static method</param>
        /// <param name="expectedHashOutput">Expected hash generated by the
        ///   GenerateHash static method</param>
        [DataTestMethod]
        [DataRow(TEST_STRING_1,
                "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5")]
        [DataRow(TEST_STRING_2,
                "a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e")]
        public void GenerateHash_SHA256HashTest_ValidCorrect(string hashInput, 
                                                            string expectedHashOutput)
        {
            string actualHashOutput = HashGenerator.GenerateHash(hashInput, 
                                                    HashGenerator.HashAlgorithmType.SHA256);

            Assert.AreEqual(actualHashOutput, expectedHashOutput);
        }




        /// <summary>
        /// Test for SHA384 hashing for the GenerateHash static method
        /// </summary>
        /// 
        /// <param name="hashInput">Input passed into the GenerateHash static method</param>
        /// <param name="expectedHashOutput">Expected hash generated by the
        ///   GenerateHash static method</param>
        [DataTestMethod]
        [DataRow(TEST_STRING_1,
                "0fa76955abfa9dafd83facca8343a92aa09497f98101086611b0bfa95dbc0dcc661d62e9568a5a032ba81960f3e55d4a")]
        [DataRow(TEST_STRING_2,
                "99514329186b2f6ae4a1329e7ee6c610a729636335174ac6b740f9028396fcc803d0e93863a7c3d90f86beee782f4f3f")]
        public void GenerateHash_SHA384HashTest_ValidCorrect(string hashInput, 
                                                            string expectedHashOutput)
        {
            string actualHashOutput = HashGenerator.GenerateHash(hashInput, 
                                                        HashGenerator.HashAlgorithmType.SHA384);

            Assert.AreEqual(actualHashOutput, expectedHashOutput);
        }



        /// <summary>
        /// Test for SHA512 hashing for the GenerateHash static method
        /// </summary>
        /// 
        /// <param name="hashInput">Input passed into the GenerateHash static method</param>
        /// <param name="expectedHashOutput">Expected hash generated by the
        ///   GenerateHash static method</param>
        [DataTestMethod]
        [DataRow(TEST_STRING_1,
                "3627909a29c31381a071ec27f7c9ca97726182aed29a7ddd2e54353322cfb30abb9e3a6df2ac2c20fe23436311d678564d0c8d305930575f60e2d3d048184d79")]
        [DataRow(TEST_STRING_2,
                "2c74fd17edafd80e8447b0d46741ee243b7eb74dd2149a0ab1b9246fb30382f27e853d8585719e0e67cbda0daa8f51671064615d645ae27acb15bfb1447f459b")]
        public void GenerateHash_SHA512HashTest_ValidCorrect(string hashInput, 
                                                            string expectedHashOutput)
        {
            string actualHashOutput = HashGenerator.GenerateHash(hashInput, HashGenerator.HashAlgorithmType.SHA512);

            Assert.AreEqual(actualHashOutput, expectedHashOutput);
        }
    }
}